~~~使用程式前請先閱讀~~~(1.程式執行流程 & 2.程式架構 & 功能設計)
/*P76081116鄭皓中*/
!!!!!!請注意!!!!!!務必請使用"c++11"以上的編譯器，不然"stoi()"無法編譯!!
!!!!!!請注意!!!!!!務必請使用"c++11"以上的編譯器，不然"stoi()"無法編譯!!
!!!!!!請注意!!!!!!務必請使用"c++11"以上的編譯器，不然"stoi()"無法編譯!!
~~~~~若是"c++11"版本以上的編譯器，鐵定能編譯成功~~~~~

1.程式執行流程 :(此程式是以c++所寫) 

請照著助教公布的作業的input輸入(如下表示) :

11                        ------------------>請輸入有幾個邊(activities)
1 0 1 6                   ------------------>請輸入有邊的左右兩點及&邊的權重                   
2 0 2 4                             |
3 0 3 5                             |
4 1 4 1                             |
5 2 4 1                             |
6 3 5 2                             |
7 4 6 9                             |
8 4 7 7                             |
9 5 7 4                             |
10 6 8 2                           ▽
11 7 8 4                   因為一開始輸入11，所以要逐一輸入11條邊的資訊

------------------output------------------
event   ee      le      
0       0       0        ------------------>輸出event的index & earliest time ee & latest time
1       6       6       
2       4       6       
3       5       8       
4       7       7       
5       7       10      
6       16      16      
7       14      14      
8       18      18      

act.    e       l       slack   critical 
1       0       0       0       Yes       ------------------>輸出activity的index & early time & late time & slack(可延遲時間) & 是不是critical
2       0       2       2       No       
3       0       3       3       No       
4       6       6       0       Yes      
5       4       6       2       No       
6       5       8       3       No       
7       7       7       0       Yes
8       7       7       0       Yes      
9       7       10      3       No       
10      16      16      0       Yes      
11      14      14      0       Yes      

1 4 7 8 10 11
請按任意鍵繼續 . . .

2.程式架構 & 功能設計 : 
	我設計了三個struct，分別是Node、Activity、Header，用來記錄點&邊&點上一些附加的資訊。
我還有設計一些function，像是StringSplit是用來把輸入的string拆分成一個個的數字，而CheckHeader & CheckActivity
則是用來檢查點的header是否已經存在，如果header存在則傳回其index，如果不存在，則傳回當前HeaderAvailable的大小。
UpdateCount則是用來計算特定key value出現的次數。TopologicalOrder就是把event的topologicalorder的關係排好。
而助教題目上說要格式化的輸出，我是利用"\t"去把間隔做出來，然後排列出與題目一樣的輸出。那ee & le & e & l & slack
的計算都是老師上課ppt所定義的的算法，我也是有用"筆"算過好幾次的XD